|fpga
clk_50mhz => clk_50mhz.IN12
sw0_physical_reset => sw17_playback_debounced_prev.ACLR
sw0_physical_reset => practice_mode_enabled_reg.ACLR
sw0_physical_reset => buzzer_out~reg0.ACLR
sw0_physical_reset => buzzer_counter_reg[0].ACLR
sw0_physical_reset => buzzer_counter_reg[1].ACLR
sw0_physical_reset => buzzer_counter_reg[2].ACLR
sw0_physical_reset => buzzer_counter_reg[3].ACLR
sw0_physical_reset => buzzer_counter_reg[4].ACLR
sw0_physical_reset => buzzer_counter_reg[5].ACLR
sw0_physical_reset => buzzer_counter_reg[6].ACLR
sw0_physical_reset => buzzer_counter_reg[7].ACLR
sw0_physical_reset => buzzer_counter_reg[8].ACLR
sw0_physical_reset => buzzer_counter_reg[9].ACLR
sw0_physical_reset => buzzer_counter_reg[10].ACLR
sw0_physical_reset => buzzer_counter_reg[11].ACLR
sw0_physical_reset => buzzer_counter_reg[12].ACLR
sw0_physical_reset => buzzer_counter_reg[13].ACLR
sw0_physical_reset => buzzer_counter_reg[14].ACLR
sw0_physical_reset => buzzer_counter_reg[15].ACLR
sw0_physical_reset => buzzer_counter_reg[16].ACLR
sw0_physical_reset => buzzer_counter_reg[17].ACLR
sw0_physical_reset => final_key_id_for_sound_and_display_prev[0].ACLR
sw0_physical_reset => final_key_id_for_sound_and_display_prev[1].ACLR
sw0_physical_reset => final_key_id_for_sound_and_display_prev[2].ACLR
sw0_physical_reset => final_key_id_for_sound_and_display_prev[3].ACLR
sw0_physical_reset => final_key_is_pressed_for_sound_and_display_prev.ACLR
sw0_physical_reset => rst_n_internal.IN12
note_keys_physical_in[0] => all_musical_keys_raw[0].IN1
note_keys_physical_in[1] => all_musical_keys_raw[1].IN1
note_keys_physical_in[2] => all_musical_keys_raw[2].IN1
note_keys_physical_in[3] => all_musical_keys_raw[3].IN1
note_keys_physical_in[4] => all_musical_keys_raw[4].IN1
note_keys_physical_in[5] => all_musical_keys_raw[5].IN1
note_keys_physical_in[6] => all_musical_keys_raw[6].IN1
key8_sharp1_raw => all_musical_keys_raw[7].IN1
key9_flat3_raw => all_musical_keys_raw[8].IN1
key10_sharp4_raw => all_musical_keys_raw[9].IN1
key11_sharp5_raw => all_musical_keys_raw[10].IN1
key12_flat7_raw => all_musical_keys_raw[11].IN1
sw15_octave_up_raw => sw15_octave_up_raw.IN1
sw13_octave_down_raw => sw13_octave_down_raw.IN1
sw16_record_raw => sw16_record_raw.IN1
sw17_playback_raw => sw17_playback_raw.IN1
key14_play_song_raw => key14_play_song_raw.IN1
buzzer_out <= buzzer_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_a <= seven_segment_controller:seven_segment_display_inst.seg_a
seven_seg_b <= seven_segment_controller:seven_segment_display_inst.seg_b
seven_seg_c <= seven_segment_controller:seven_segment_display_inst.seg_c
seven_seg_d <= seven_segment_controller:seven_segment_display_inst.seg_d
seven_seg_e <= seven_segment_controller:seven_segment_display_inst.seg_e
seven_seg_f <= seven_segment_controller:seven_segment_display_inst.seg_f
seven_seg_g <= seven_segment_controller:seven_segment_display_inst.seg_g
seven_seg_dp <= seven_segment_controller:seven_segment_display_inst.seg_dp
seven_seg_digit_selects[0] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[1] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[2] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[3] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[4] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[5] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[6] <= seven_segment_controller:seven_segment_display_inst.digit_selects
seven_seg_digit_selects[7] <= seven_segment_controller:seven_segment_display_inst.digit_selects


|fpga|keyboard_scanner:keyboard_scanner_inst
clk => clk.IN12
rst_n => rst_n.IN12
keys_in_raw[0] => keys_in_raw[0].IN1
keys_in_raw[1] => keys_in_raw[1].IN1
keys_in_raw[2] => keys_in_raw[2].IN1
keys_in_raw[3] => keys_in_raw[3].IN1
keys_in_raw[4] => keys_in_raw[4].IN1
keys_in_raw[5] => keys_in_raw[5].IN1
keys_in_raw[6] => keys_in_raw[6].IN1
keys_in_raw[7] => keys_in_raw[7].IN1
keys_in_raw[8] => keys_in_raw[8].IN1
keys_in_raw[9] => keys_in_raw[9].IN1
keys_in_raw[10] => keys_in_raw[10].IN1
keys_in_raw[11] => keys_in_raw[11].IN1
active_key_id[0] <= active_key_id.DB_MAX_OUTPUT_PORT_TYPE
active_key_id[1] <= active_key_id.DB_MAX_OUTPUT_PORT_TYPE
active_key_id[2] <= active_key_id.DB_MAX_OUTPUT_PORT_TYPE
active_key_id[3] <= active_key_id.DB_MAX_OUTPUT_PORT_TYPE
key_is_pressed <= key_is_pressed.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[0].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[1].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[2].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[3].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[4].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[5].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[6].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[7].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[8].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[9].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[10].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|keyboard_scanner:keyboard_scanner_inst|debouncer:debounce_gen_block[11].inst_debouncer
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|debouncer:octave_up_deb_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|debouncer:octave_down_deb_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|debouncer:record_deb_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|debouncer:playback_deb_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|debouncer:play_song_deb_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => key_temp_state.CLK
clk => key_out_debounced~reg0.CLK
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => key_temp_state.ACLR
rst_n => key_out_debounced~reg0.ACLR
key_in_raw => always0.IN1
key_in_raw => key_temp_state.DATAIN
key_out_debounced <= key_out_debounced~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|piano_recorder:piano_recorder_inst
clk => recorded_data_memory.we_a.CLK
clk => recorded_data_memory.waddr_a[8].CLK
clk => recorded_data_memory.waddr_a[7].CLK
clk => recorded_data_memory.waddr_a[6].CLK
clk => recorded_data_memory.waddr_a[5].CLK
clk => recorded_data_memory.waddr_a[4].CLK
clk => recorded_data_memory.waddr_a[3].CLK
clk => recorded_data_memory.waddr_a[2].CLK
clk => recorded_data_memory.waddr_a[1].CLK
clk => recorded_data_memory.waddr_a[0].CLK
clk => recorded_data_memory.data_a[6].CLK
clk => recorded_data_memory.data_a[5].CLK
clk => recorded_data_memory.data_a[4].CLK
clk => recorded_data_memory.data_a[3].CLK
clk => recorded_data_memory.data_a[2].CLK
clk => recorded_data_memory.data_a[1].CLK
clk => recorded_data_memory.data_a[0].CLK
clk => sample_timer_reg[0].CLK
clk => sample_timer_reg[1].CLK
clk => sample_timer_reg[2].CLK
clk => sample_timer_reg[3].CLK
clk => sample_timer_reg[4].CLK
clk => sample_timer_reg[5].CLK
clk => sample_timer_reg[6].CLK
clk => sample_timer_reg[7].CLK
clk => sample_timer_reg[8].CLK
clk => sample_timer_reg[9].CLK
clk => sample_timer_reg[10].CLK
clk => sample_timer_reg[11].CLK
clk => sample_timer_reg[12].CLK
clk => sample_timer_reg[13].CLK
clk => sample_timer_reg[14].CLK
clk => sample_timer_reg[15].CLK
clk => sample_timer_reg[16].CLK
clk => sample_timer_reg[17].CLK
clk => sample_timer_reg[18].CLK
clk => sample_timer_reg[19].CLK
clk => last_recorded_ptr[0].CLK
clk => last_recorded_ptr[1].CLK
clk => last_recorded_ptr[2].CLK
clk => last_recorded_ptr[3].CLK
clk => last_recorded_ptr[4].CLK
clk => last_recorded_ptr[5].CLK
clk => last_recorded_ptr[6].CLK
clk => last_recorded_ptr[7].CLK
clk => last_recorded_ptr[8].CLK
clk => playback_read_ptr[0].CLK
clk => playback_read_ptr[1].CLK
clk => playback_read_ptr[2].CLK
clk => playback_read_ptr[3].CLK
clk => playback_read_ptr[4].CLK
clk => playback_read_ptr[5].CLK
clk => playback_read_ptr[6].CLK
clk => playback_read_ptr[7].CLK
clk => playback_read_ptr[8].CLK
clk => record_write_ptr[0].CLK
clk => record_write_ptr[1].CLK
clk => record_write_ptr[2].CLK
clk => record_write_ptr[3].CLK
clk => record_write_ptr[4].CLK
clk => record_write_ptr[5].CLK
clk => record_write_ptr[6].CLK
clk => record_write_ptr[7].CLK
clk => record_write_ptr[8].CLK
clk => playback_octave_encoded[0].CLK
clk => playback_octave_encoded[1].CLK
clk => playback_key_is_pressed~reg0.CLK
clk => playback_key_id[0]~reg0.CLK
clk => playback_key_id[1]~reg0.CLK
clk => playback_key_id[2]~reg0.CLK
clk => playback_key_id[3]~reg0.CLK
clk => is_playing~reg0.CLK
clk => is_recording~reg0.CLK
clk => current_state_reg~4.DATAIN
clk => recorded_data_memory.CLK0
rst_n => comb.IN1
rst_n => sample_timer_reg[0].ACLR
rst_n => sample_timer_reg[1].ACLR
rst_n => sample_timer_reg[2].ACLR
rst_n => sample_timer_reg[3].ACLR
rst_n => sample_timer_reg[4].ACLR
rst_n => sample_timer_reg[5].ACLR
rst_n => sample_timer_reg[6].ACLR
rst_n => sample_timer_reg[7].ACLR
rst_n => sample_timer_reg[8].ACLR
rst_n => sample_timer_reg[9].ACLR
rst_n => sample_timer_reg[10].ACLR
rst_n => sample_timer_reg[11].ACLR
rst_n => sample_timer_reg[12].ACLR
rst_n => sample_timer_reg[13].ACLR
rst_n => sample_timer_reg[14].ACLR
rst_n => sample_timer_reg[15].ACLR
rst_n => sample_timer_reg[16].ACLR
rst_n => sample_timer_reg[17].ACLR
rst_n => sample_timer_reg[18].ACLR
rst_n => sample_timer_reg[19].ACLR
rst_n => last_recorded_ptr[0].ACLR
rst_n => last_recorded_ptr[1].ACLR
rst_n => last_recorded_ptr[2].ACLR
rst_n => last_recorded_ptr[3].ACLR
rst_n => last_recorded_ptr[4].ACLR
rst_n => last_recorded_ptr[5].ACLR
rst_n => last_recorded_ptr[6].ACLR
rst_n => last_recorded_ptr[7].ACLR
rst_n => last_recorded_ptr[8].ACLR
rst_n => playback_read_ptr[0].ACLR
rst_n => playback_read_ptr[1].ACLR
rst_n => playback_read_ptr[2].ACLR
rst_n => playback_read_ptr[3].ACLR
rst_n => playback_read_ptr[4].ACLR
rst_n => playback_read_ptr[5].ACLR
rst_n => playback_read_ptr[6].ACLR
rst_n => playback_read_ptr[7].ACLR
rst_n => playback_read_ptr[8].ACLR
rst_n => record_write_ptr[0].ACLR
rst_n => record_write_ptr[1].ACLR
rst_n => record_write_ptr[2].ACLR
rst_n => record_write_ptr[3].ACLR
rst_n => record_write_ptr[4].ACLR
rst_n => record_write_ptr[5].ACLR
rst_n => record_write_ptr[6].ACLR
rst_n => record_write_ptr[7].ACLR
rst_n => record_write_ptr[8].ACLR
rst_n => playback_octave_encoded[0].ACLR
rst_n => playback_octave_encoded[1].ACLR
rst_n => playback_key_is_pressed~reg0.ACLR
rst_n => playback_key_id[0]~reg0.ACLR
rst_n => playback_key_id[1]~reg0.ACLR
rst_n => playback_key_id[2]~reg0.ACLR
rst_n => playback_key_id[3]~reg0.ACLR
rst_n => is_playing~reg0.ACLR
rst_n => is_recording~reg0.ACLR
rst_n => current_state_reg~6.DATAIN
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => is_recording.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => playback_read_ptr.OUTPUTSELECT
record_active_level => is_playing.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => current_state_reg.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => last_recorded_ptr.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => sample_timer_reg.OUTPUTSELECT
record_active_level => recorded_data_memory.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
record_active_level => record_write_ptr.OUTPUTSELECT
playback_start_pulse => always0.IN1
live_key_id[0] => recorded_data_memory.data_a[0].DATAIN
live_key_id[0] => recorded_data_memory.DATAIN
live_key_id[1] => recorded_data_memory.data_a[1].DATAIN
live_key_id[1] => recorded_data_memory.DATAIN1
live_key_id[2] => recorded_data_memory.data_a[2].DATAIN
live_key_id[2] => recorded_data_memory.DATAIN2
live_key_id[3] => recorded_data_memory.data_a[3].DATAIN
live_key_id[3] => recorded_data_memory.DATAIN3
live_key_is_pressed => recorded_data_memory.data_a[4].DATAIN
live_key_is_pressed => recorded_data_memory.DATAIN4
live_octave_up => live_octave_encoded.IN0
live_octave_up => live_octave_encoded.IN0
live_octave_down => live_octave_encoded.IN1
live_octave_down => live_octave_encoded.IN1
playback_key_id[0] <= playback_key_id[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
playback_key_id[1] <= playback_key_id[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
playback_key_id[2] <= playback_key_id[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
playback_key_id[3] <= playback_key_id[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
playback_key_is_pressed <= playback_key_is_pressed~reg0.DB_MAX_OUTPUT_PORT_TYPE
playback_octave_up <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
playback_octave_down <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
is_recording <= is_recording~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_playing <= is_playing~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|song_player:song_player_inst
clk => play_active_level_prev.CLK
clk => note_duration_timer[0].CLK
clk => note_duration_timer[1].CLK
clk => note_duration_timer[2].CLK
clk => note_duration_timer[3].CLK
clk => note_duration_timer[4].CLK
clk => note_duration_timer[5].CLK
clk => note_duration_timer[6].CLK
clk => note_duration_timer[7].CLK
clk => note_duration_timer[8].CLK
clk => note_duration_timer[9].CLK
clk => note_duration_timer[10].CLK
clk => note_duration_timer[11].CLK
clk => note_duration_timer[12].CLK
clk => note_duration_timer[13].CLK
clk => note_duration_timer[14].CLK
clk => note_duration_timer[15].CLK
clk => note_duration_timer[16].CLK
clk => note_duration_timer[17].CLK
clk => note_duration_timer[18].CLK
clk => note_duration_timer[19].CLK
clk => note_duration_timer[20].CLK
clk => note_duration_timer[21].CLK
clk => note_duration_timer[22].CLK
clk => note_duration_timer[23].CLK
clk => note_duration_timer[24].CLK
clk => note_duration_timer[25].CLK
clk => current_note_index[0].CLK
clk => current_note_index[1].CLK
clk => current_note_index[2].CLK
clk => current_note_index[3].CLK
clk => current_note_index[4].CLK
clk => current_note_index[5].CLK
clk => current_note_index[6].CLK
clk => current_note_index[7].CLK
clk => current_note_index[8].CLK
clk => state.CLK
clk => is_song_playing~reg0.CLK
clk => song_octave_down_feed~reg0.CLK
clk => song_octave_up_feed~reg0.CLK
clk => song_key_is_pressed~reg0.CLK
clk => song_key_id[0]~reg0.CLK
clk => song_key_id[1]~reg0.CLK
clk => song_key_id[2]~reg0.CLK
clk => song_key_id[3]~reg0.CLK
clk => current_note_duration_units[0].CLK
clk => current_note_duration_units[1].CLK
clk => current_note_duration_units[2].CLK
clk => current_note_duration_units[3].CLK
rst_n => play_active_level_prev.ACLR
rst_n => note_duration_timer[0].ACLR
rst_n => note_duration_timer[1].ACLR
rst_n => note_duration_timer[2].ACLR
rst_n => note_duration_timer[3].ACLR
rst_n => note_duration_timer[4].ACLR
rst_n => note_duration_timer[5].ACLR
rst_n => note_duration_timer[6].ACLR
rst_n => note_duration_timer[7].ACLR
rst_n => note_duration_timer[8].ACLR
rst_n => note_duration_timer[9].ACLR
rst_n => note_duration_timer[10].ACLR
rst_n => note_duration_timer[11].ACLR
rst_n => note_duration_timer[12].ACLR
rst_n => note_duration_timer[13].ACLR
rst_n => note_duration_timer[14].ACLR
rst_n => note_duration_timer[15].ACLR
rst_n => note_duration_timer[16].ACLR
rst_n => note_duration_timer[17].ACLR
rst_n => note_duration_timer[18].ACLR
rst_n => note_duration_timer[19].ACLR
rst_n => note_duration_timer[20].ACLR
rst_n => note_duration_timer[21].ACLR
rst_n => note_duration_timer[22].ACLR
rst_n => note_duration_timer[23].ACLR
rst_n => note_duration_timer[24].ACLR
rst_n => note_duration_timer[25].ACLR
rst_n => current_note_index[0].ACLR
rst_n => current_note_index[1].ACLR
rst_n => current_note_index[2].ACLR
rst_n => current_note_index[3].ACLR
rst_n => current_note_index[4].ACLR
rst_n => current_note_index[5].ACLR
rst_n => current_note_index[6].ACLR
rst_n => current_note_index[7].ACLR
rst_n => current_note_index[8].ACLR
rst_n => state.ACLR
rst_n => is_song_playing~reg0.ACLR
rst_n => song_octave_down_feed~reg0.ACLR
rst_n => song_octave_up_feed~reg0.ACLR
rst_n => song_key_is_pressed~reg0.ACLR
rst_n => song_key_id[0]~reg0.ACLR
rst_n => song_key_id[1]~reg0.ACLR
rst_n => song_key_id[2]~reg0.ACLR
rst_n => song_key_id[3]~reg0.ACLR
rst_n => current_note_duration_units[0].ACLR
rst_n => current_note_duration_units[1].ACLR
rst_n => current_note_duration_units[2].ACLR
rst_n => current_note_duration_units[3].ACLR
play_active_level => always0.IN1
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_index.OUTPUTSELECT
play_active_level => current_note_duration_units.OUTPUTSELECT
play_active_level => current_note_duration_units.OUTPUTSELECT
play_active_level => current_note_duration_units.OUTPUTSELECT
play_active_level => current_note_duration_units.OUTPUTSELECT
play_active_level => song_key_id.OUTPUTSELECT
play_active_level => song_key_id.OUTPUTSELECT
play_active_level => song_key_id.OUTPUTSELECT
play_active_level => song_key_id.OUTPUTSELECT
play_active_level => song_key_is_pressed.OUTPUTSELECT
play_active_level => song_octave_up_feed.OUTPUTSELECT
play_active_level => song_octave_down_feed.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => note_duration_timer.OUTPUTSELECT
play_active_level => state.OUTPUTSELECT
play_active_level => play_active_level_prev.DATAIN
play_active_level => is_song_playing.DATAB
play_active_level => always0.IN1
song_key_id[0] <= song_key_id[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_key_id[1] <= song_key_id[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_key_id[2] <= song_key_id[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_key_id[3] <= song_key_id[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_key_is_pressed <= song_key_is_pressed~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_octave_up_feed <= song_octave_up_feed~reg0.DB_MAX_OUTPUT_PORT_TYPE
song_octave_down_feed <= song_octave_down_feed~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_song_playing <= is_song_playing~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|mode_sequencer:mode_sequencer_inst
clk => sequence_input_active_flag.CLK
clk => timeout_counter_reg[0].CLK
clk => timeout_counter_reg[1].CLK
clk => timeout_counter_reg[2].CLK
clk => timeout_counter_reg[3].CLK
clk => timeout_counter_reg[4].CLK
clk => timeout_counter_reg[5].CLK
clk => timeout_counter_reg[6].CLK
clk => timeout_counter_reg[7].CLK
clk => timeout_counter_reg[8].CLK
clk => timeout_counter_reg[9].CLK
clk => timeout_counter_reg[10].CLK
clk => timeout_counter_reg[11].CLK
clk => timeout_counter_reg[12].CLK
clk => timeout_counter_reg[13].CLK
clk => timeout_counter_reg[14].CLK
clk => timeout_counter_reg[15].CLK
clk => timeout_counter_reg[16].CLK
clk => timeout_counter_reg[17].CLK
clk => timeout_counter_reg[18].CLK
clk => timeout_counter_reg[19].CLK
clk => timeout_counter_reg[20].CLK
clk => timeout_counter_reg[21].CLK
clk => timeout_counter_reg[22].CLK
clk => timeout_counter_reg[23].CLK
clk => timeout_counter_reg[24].CLK
clk => timeout_counter_reg[25].CLK
clk => timeout_counter_reg[26].CLK
clk => last_pressed_key_id_prev_cycle[0].CLK
clk => last_pressed_key_id_prev_cycle[1].CLK
clk => last_pressed_key_id_prev_cycle[2].CLK
clk => last_pressed_key_id_prev_cycle[3].CLK
clk => current_match_index[0].CLK
clk => current_match_index[1].CLK
clk => current_match_index[2].CLK
clk => practice_mode_active_pulse~reg0.CLK
rst_n => sequence_input_active_flag.ACLR
rst_n => timeout_counter_reg[0].ACLR
rst_n => timeout_counter_reg[1].ACLR
rst_n => timeout_counter_reg[2].ACLR
rst_n => timeout_counter_reg[3].ACLR
rst_n => timeout_counter_reg[4].ACLR
rst_n => timeout_counter_reg[5].ACLR
rst_n => timeout_counter_reg[6].ACLR
rst_n => timeout_counter_reg[7].ACLR
rst_n => timeout_counter_reg[8].ACLR
rst_n => timeout_counter_reg[9].ACLR
rst_n => timeout_counter_reg[10].ACLR
rst_n => timeout_counter_reg[11].ACLR
rst_n => timeout_counter_reg[12].ACLR
rst_n => timeout_counter_reg[13].ACLR
rst_n => timeout_counter_reg[14].ACLR
rst_n => timeout_counter_reg[15].ACLR
rst_n => timeout_counter_reg[16].ACLR
rst_n => timeout_counter_reg[17].ACLR
rst_n => timeout_counter_reg[18].ACLR
rst_n => timeout_counter_reg[19].ACLR
rst_n => timeout_counter_reg[20].ACLR
rst_n => timeout_counter_reg[21].ACLR
rst_n => timeout_counter_reg[22].ACLR
rst_n => timeout_counter_reg[23].ACLR
rst_n => timeout_counter_reg[24].ACLR
rst_n => timeout_counter_reg[25].ACLR
rst_n => timeout_counter_reg[26].ACLR
rst_n => last_pressed_key_id_prev_cycle[0].ACLR
rst_n => last_pressed_key_id_prev_cycle[1].ACLR
rst_n => last_pressed_key_id_prev_cycle[2].ACLR
rst_n => last_pressed_key_id_prev_cycle[3].ACLR
rst_n => current_match_index[0].ACLR
rst_n => current_match_index[1].ACLR
rst_n => current_match_index[2].ACLR
rst_n => practice_mode_active_pulse~reg0.ACLR
current_live_key_id[0] => Equal1.IN3
current_live_key_id[0] => Equal9.IN7
current_live_key_id[0] => last_pressed_key_id_prev_cycle.DATAB
current_live_key_id[0] => Equal0.IN3
current_live_key_id[0] => Equal11.IN3
current_live_key_id[1] => Equal1.IN2
current_live_key_id[1] => Equal9.IN6
current_live_key_id[1] => last_pressed_key_id_prev_cycle.DATAB
current_live_key_id[1] => Equal0.IN2
current_live_key_id[1] => Equal11.IN0
current_live_key_id[2] => Equal1.IN1
current_live_key_id[2] => Equal9.IN5
current_live_key_id[2] => last_pressed_key_id_prev_cycle.DATAB
current_live_key_id[2] => Equal0.IN1
current_live_key_id[2] => Equal11.IN2
current_live_key_id[3] => Equal1.IN0
current_live_key_id[3] => last_pressed_key_id_prev_cycle.DATAB
current_live_key_id[3] => Equal0.IN0
current_live_key_id[3] => Equal9.IN0
current_live_key_id[3] => Equal11.IN1
current_live_key_pressed => always0.IN1
current_live_key_pressed => last_pressed_key_id_prev_cycle.OUTPUTSELECT
current_live_key_pressed => last_pressed_key_id_prev_cycle.OUTPUTSELECT
current_live_key_pressed => last_pressed_key_id_prev_cycle.OUTPUTSELECT
current_live_key_pressed => last_pressed_key_id_prev_cycle.OUTPUTSELECT
practice_mode_active_pulse <= practice_mode_active_pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|practice_player:practice_player_inst
clk => display_out_seg5[0]~reg0.CLK
clk => display_out_seg5[1]~reg0.CLK
clk => display_out_seg5[2]~reg0.CLK
clk => display_out_seg4[0]~reg0.CLK
clk => display_out_seg4[1]~reg0.CLK
clk => display_out_seg4[2]~reg0.CLK
clk => display_out_seg3[0]~reg0.CLK
clk => display_out_seg3[1]~reg0.CLK
clk => display_out_seg3[2]~reg0.CLK
clk => display_out_seg2[0]~reg0.CLK
clk => display_out_seg2[1]~reg0.CLK
clk => display_out_seg2[2]~reg0.CLK
clk => display_out_seg1[0]~reg0.CLK
clk => display_out_seg1[1]~reg0.CLK
clk => display_out_seg1[2]~reg0.CLK
clk => display_out_seg0[0]~reg0.CLK
clk => display_out_seg0[1]~reg0.CLK
clk => display_out_seg0[2]~reg0.CLK
clk => practice_song_finished_event~reg0.CLK
clk => wrong_note_played_event~reg0.CLK
clk => correct_note_played_event~reg0.CLK
clk => current_note_index_in_song[0].CLK
clk => current_note_index_in_song[1].CLK
clk => current_note_index_in_song[2].CLK
clk => current_note_index_in_song[3].CLK
clk => current_live_key_pressed_prev.CLK
rst_n => display_out_seg5[0]~reg0.ACLR
rst_n => display_out_seg5[1]~reg0.PRESET
rst_n => display_out_seg5[2]~reg0.PRESET
rst_n => display_out_seg4[0]~reg0.ACLR
rst_n => display_out_seg4[1]~reg0.PRESET
rst_n => display_out_seg4[2]~reg0.PRESET
rst_n => display_out_seg3[0]~reg0.PRESET
rst_n => display_out_seg3[1]~reg0.ACLR
rst_n => display_out_seg3[2]~reg0.PRESET
rst_n => display_out_seg2[0]~reg0.PRESET
rst_n => display_out_seg2[1]~reg0.ACLR
rst_n => display_out_seg2[2]~reg0.PRESET
rst_n => display_out_seg1[0]~reg0.PRESET
rst_n => display_out_seg1[1]~reg0.ACLR
rst_n => display_out_seg1[2]~reg0.ACLR
rst_n => display_out_seg0[0]~reg0.PRESET
rst_n => display_out_seg0[1]~reg0.ACLR
rst_n => display_out_seg0[2]~reg0.ACLR
rst_n => practice_song_finished_event~reg0.ACLR
rst_n => wrong_note_played_event~reg0.ACLR
rst_n => correct_note_played_event~reg0.ACLR
rst_n => current_note_index_in_song[0].ACLR
rst_n => current_note_index_in_song[1].ACLR
rst_n => current_note_index_in_song[2].ACLR
rst_n => current_note_index_in_song[3].ACLR
rst_n => current_live_key_pressed_prev.ACLR
practice_mode_active => correct_note_played_event.OUTPUTSELECT
practice_mode_active => practice_song_finished_event.OUTPUTSELECT
practice_mode_active => current_note_index_in_song.OUTPUTSELECT
practice_mode_active => current_note_index_in_song.OUTPUTSELECT
practice_mode_active => current_note_index_in_song.OUTPUTSELECT
practice_mode_active => current_note_index_in_song.OUTPUTSELECT
practice_mode_active => display_out_seg0.OUTPUTSELECT
practice_mode_active => display_out_seg0.OUTPUTSELECT
practice_mode_active => display_out_seg0.OUTPUTSELECT
practice_mode_active => display_out_seg1.OUTPUTSELECT
practice_mode_active => display_out_seg1.OUTPUTSELECT
practice_mode_active => display_out_seg1.OUTPUTSELECT
practice_mode_active => display_out_seg2.OUTPUTSELECT
practice_mode_active => display_out_seg2.OUTPUTSELECT
practice_mode_active => display_out_seg2.OUTPUTSELECT
practice_mode_active => display_out_seg3.OUTPUTSELECT
practice_mode_active => display_out_seg3.OUTPUTSELECT
practice_mode_active => display_out_seg3.OUTPUTSELECT
practice_mode_active => display_out_seg4.OUTPUTSELECT
practice_mode_active => display_out_seg4.OUTPUTSELECT
practice_mode_active => display_out_seg4.OUTPUTSELECT
practice_mode_active => display_out_seg5.OUTPUTSELECT
practice_mode_active => display_out_seg5.OUTPUTSELECT
practice_mode_active => display_out_seg5.OUTPUTSELECT
practice_mode_active => wrong_note_played_event.OUTPUTSELECT
current_live_key_id[0] => Equal15.IN7
current_live_key_id[0] => Equal0.IN3
current_live_key_id[1] => Equal15.IN6
current_live_key_id[1] => Equal0.IN2
current_live_key_id[2] => Equal15.IN5
current_live_key_id[2] => Equal0.IN1
current_live_key_id[3] => Equal0.IN0
current_live_key_id[3] => Equal15.IN0
current_live_key_pressed => new_key_press_event.IN1
current_live_key_pressed => current_live_key_pressed_prev.DATAIN
display_out_seg0[0] <= display_out_seg0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg0[1] <= display_out_seg0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg0[2] <= display_out_seg0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg1[0] <= display_out_seg1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg1[1] <= display_out_seg1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg1[2] <= display_out_seg1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg2[0] <= display_out_seg2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg2[1] <= display_out_seg2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg2[2] <= display_out_seg2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg3[0] <= display_out_seg3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg3[1] <= display_out_seg3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg3[2] <= display_out_seg3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg4[0] <= display_out_seg4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg4[1] <= display_out_seg4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg4[2] <= display_out_seg4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg5[0] <= display_out_seg5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg5[1] <= display_out_seg5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_out_seg5[2] <= display_out_seg5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
correct_note_played_event <= correct_note_played_event~reg0.DB_MAX_OUTPUT_PORT_TYPE
wrong_note_played_event <= wrong_note_played_event~reg0.DB_MAX_OUTPUT_PORT_TYPE
practice_song_finished_event <= practice_song_finished_event~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|scrolling_display_buffer:scroller_inst
clk => display_data_seg6[0]~reg0.CLK
clk => display_data_seg6[1]~reg0.CLK
clk => display_data_seg6[2]~reg0.CLK
clk => display_data_seg5[0]~reg0.CLK
clk => display_data_seg5[1]~reg0.CLK
clk => display_data_seg5[2]~reg0.CLK
clk => display_data_seg4[0]~reg0.CLK
clk => display_data_seg4[1]~reg0.CLK
clk => display_data_seg4[2]~reg0.CLK
clk => display_data_seg3[0]~reg0.CLK
clk => display_data_seg3[1]~reg0.CLK
clk => display_data_seg3[2]~reg0.CLK
clk => display_data_seg2[0]~reg0.CLK
clk => display_data_seg2[1]~reg0.CLK
clk => display_data_seg2[2]~reg0.CLK
clk => display_data_seg1[0]~reg0.CLK
clk => display_data_seg1[1]~reg0.CLK
clk => display_data_seg1[2]~reg0.CLK
clk => seg_buffer[5][0].CLK
clk => seg_buffer[5][1].CLK
clk => seg_buffer[5][2].CLK
clk => seg_buffer[4][0].CLK
clk => seg_buffer[4][1].CLK
clk => seg_buffer[4][2].CLK
clk => seg_buffer[3][0].CLK
clk => seg_buffer[3][1].CLK
clk => seg_buffer[3][2].CLK
clk => seg_buffer[2][0].CLK
clk => seg_buffer[2][1].CLK
clk => seg_buffer[2][2].CLK
clk => seg_buffer[1][0].CLK
clk => seg_buffer[1][1].CLK
clk => seg_buffer[1][2].CLK
clk => seg_buffer[0][0].CLK
clk => seg_buffer[0][1].CLK
clk => seg_buffer[0][2].CLK
rst_n => display_data_seg6[0]~reg0.ACLR
rst_n => display_data_seg6[1]~reg0.ACLR
rst_n => display_data_seg6[2]~reg0.ACLR
rst_n => display_data_seg5[0]~reg0.ACLR
rst_n => display_data_seg5[1]~reg0.ACLR
rst_n => display_data_seg5[2]~reg0.ACLR
rst_n => display_data_seg4[0]~reg0.ACLR
rst_n => display_data_seg4[1]~reg0.ACLR
rst_n => display_data_seg4[2]~reg0.ACLR
rst_n => display_data_seg3[0]~reg0.ACLR
rst_n => display_data_seg3[1]~reg0.ACLR
rst_n => display_data_seg3[2]~reg0.ACLR
rst_n => display_data_seg2[0]~reg0.ACLR
rst_n => display_data_seg2[1]~reg0.ACLR
rst_n => display_data_seg2[2]~reg0.ACLR
rst_n => display_data_seg1[0]~reg0.ACLR
rst_n => display_data_seg1[1]~reg0.ACLR
rst_n => display_data_seg1[2]~reg0.ACLR
rst_n => seg_buffer[5][0].ACLR
rst_n => seg_buffer[5][1].ACLR
rst_n => seg_buffer[5][2].ACLR
rst_n => seg_buffer[4][0].ACLR
rst_n => seg_buffer[4][1].ACLR
rst_n => seg_buffer[4][2].ACLR
rst_n => seg_buffer[3][0].ACLR
rst_n => seg_buffer[3][1].ACLR
rst_n => seg_buffer[3][2].ACLR
rst_n => seg_buffer[2][0].ACLR
rst_n => seg_buffer[2][1].ACLR
rst_n => seg_buffer[2][2].ACLR
rst_n => seg_buffer[1][0].ACLR
rst_n => seg_buffer[1][1].ACLR
rst_n => seg_buffer[1][2].ACLR
rst_n => seg_buffer[0][0].ACLR
rst_n => seg_buffer[0][1].ACLR
rst_n => seg_buffer[0][2].ACLR
new_note_valid_pulse => seg_buffer[0][2].ENA
new_note_valid_pulse => seg_buffer[0][1].ENA
new_note_valid_pulse => seg_buffer[0][0].ENA
new_note_valid_pulse => seg_buffer[1][2].ENA
new_note_valid_pulse => seg_buffer[1][1].ENA
new_note_valid_pulse => seg_buffer[1][0].ENA
new_note_valid_pulse => seg_buffer[2][2].ENA
new_note_valid_pulse => seg_buffer[2][1].ENA
new_note_valid_pulse => seg_buffer[2][0].ENA
new_note_valid_pulse => seg_buffer[3][2].ENA
new_note_valid_pulse => seg_buffer[3][1].ENA
new_note_valid_pulse => seg_buffer[3][0].ENA
new_note_valid_pulse => seg_buffer[4][2].ENA
new_note_valid_pulse => seg_buffer[4][1].ENA
new_note_valid_pulse => seg_buffer[4][0].ENA
new_note_valid_pulse => seg_buffer[5][2].ENA
new_note_valid_pulse => seg_buffer[5][1].ENA
new_note_valid_pulse => seg_buffer[5][0].ENA
current_base_note_id_in[0] => seg_buffer[0][0].DATAIN
current_base_note_id_in[1] => seg_buffer[0][1].DATAIN
current_base_note_id_in[2] => seg_buffer[0][2].DATAIN
display_data_seg1[0] <= display_data_seg1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg1[1] <= display_data_seg1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg1[2] <= display_data_seg1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg2[0] <= display_data_seg2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg2[1] <= display_data_seg2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg2[2] <= display_data_seg2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg3[0] <= display_data_seg3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg3[1] <= display_data_seg3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg3[2] <= display_data_seg3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg4[0] <= display_data_seg4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg4[1] <= display_data_seg4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg4[2] <= display_data_seg4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg5[0] <= display_data_seg5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg5[1] <= display_data_seg5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg5[2] <= display_data_seg5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg6[0] <= display_data_seg6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg6[1] <= display_data_seg6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data_seg6[2] <= display_data_seg6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga|seven_segment_controller:seven_segment_display_inst
clk => seg_g~reg0.CLK
clk => seg_f~reg0.CLK
clk => seg_e~reg0.CLK
clk => seg_d~reg0.CLK
clk => seg_c~reg0.CLK
clk => seg_b~reg0.CLK
clk => seg_a~reg0.CLK
clk => digit_selects[0]~reg0.CLK
clk => digit_selects[1]~reg0.CLK
clk => digit_selects[2]~reg0.CLK
clk => digit_selects[3]~reg0.CLK
clk => digit_selects[4]~reg0.CLK
clk => digit_selects[5]~reg0.CLK
clk => digit_selects[6]~reg0.CLK
clk => digit_selects[7]~reg0.CLK
clk => current_digit_slot_reg[0].CLK
clk => current_digit_slot_reg[1].CLK
clk => current_digit_slot_reg[2].CLK
clk => mux_counter_reg[0].CLK
clk => mux_counter_reg[1].CLK
clk => mux_counter_reg[2].CLK
clk => mux_counter_reg[3].CLK
clk => mux_counter_reg[4].CLK
clk => mux_counter_reg[5].CLK
clk => mux_counter_reg[6].CLK
clk => mux_counter_reg[7].CLK
clk => mux_counter_reg[8].CLK
clk => mux_counter_reg[9].CLK
clk => mux_counter_reg[10].CLK
clk => mux_counter_reg[11].CLK
clk => mux_counter_reg[12].CLK
clk => mux_counter_reg[13].CLK
clk => mux_counter_reg[14].CLK
clk => mux_counter_reg[15].CLK
clk => mux_counter_reg[16].CLK
rst_n => seg_g~reg0.ACLR
rst_n => seg_f~reg0.ACLR
rst_n => seg_e~reg0.ACLR
rst_n => seg_d~reg0.ACLR
rst_n => seg_c~reg0.ACLR
rst_n => seg_b~reg0.ACLR
rst_n => seg_a~reg0.ACLR
rst_n => digit_selects[0]~reg0.ACLR
rst_n => digit_selects[1]~reg0.ACLR
rst_n => digit_selects[2]~reg0.ACLR
rst_n => digit_selects[3]~reg0.ACLR
rst_n => digit_selects[4]~reg0.ACLR
rst_n => digit_selects[5]~reg0.ACLR
rst_n => digit_selects[6]~reg0.ACLR
rst_n => digit_selects[7]~reg0.ACLR
rst_n => current_digit_slot_reg[0].ACLR
rst_n => current_digit_slot_reg[1].ACLR
rst_n => current_digit_slot_reg[2].ACLR
rst_n => mux_counter_reg[0].ACLR
rst_n => mux_counter_reg[1].ACLR
rst_n => mux_counter_reg[2].ACLR
rst_n => mux_counter_reg[3].ACLR
rst_n => mux_counter_reg[4].ACLR
rst_n => mux_counter_reg[5].ACLR
rst_n => mux_counter_reg[6].ACLR
rst_n => mux_counter_reg[7].ACLR
rst_n => mux_counter_reg[8].ACLR
rst_n => mux_counter_reg[9].ACLR
rst_n => mux_counter_reg[10].ACLR
rst_n => mux_counter_reg[11].ACLR
rst_n => mux_counter_reg[12].ACLR
rst_n => mux_counter_reg[13].ACLR
rst_n => mux_counter_reg[14].ACLR
rst_n => mux_counter_reg[15].ACLR
rst_n => mux_counter_reg[16].ACLR
semitone_type_in[0] => Decoder0.IN1
semitone_type_in[0] => seg_data_suffix[1].DATAA
semitone_type_in[1] => Decoder0.IN0
semitone_display_active_flag => seg_data_suffix[6].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[5].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[4].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[3].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[2].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[1].OUTPUTSELECT
semitone_display_active_flag => seg_data_suffix[0].OUTPUTSELECT
scrolled_note_seg1_in[0] => Decoder1.IN1
scrolled_note_seg1_in[0] => Decoder2.IN1
scrolled_note_seg1_in[0] => Decoder3.IN2
scrolled_note_seg1_in[1] => Decoder1.IN0
scrolled_note_seg1_in[1] => Decoder3.IN1
scrolled_note_seg1_in[2] => Decoder2.IN0
scrolled_note_seg1_in[2] => Decoder3.IN0
scrolled_note_seg2_in[0] => Decoder4.IN1
scrolled_note_seg2_in[0] => Decoder5.IN1
scrolled_note_seg2_in[0] => Decoder6.IN2
scrolled_note_seg2_in[1] => Decoder4.IN0
scrolled_note_seg2_in[1] => Decoder6.IN1
scrolled_note_seg2_in[2] => Decoder5.IN0
scrolled_note_seg2_in[2] => Decoder6.IN0
scrolled_note_seg3_in[0] => Decoder7.IN1
scrolled_note_seg3_in[0] => Decoder8.IN1
scrolled_note_seg3_in[0] => Decoder9.IN2
scrolled_note_seg3_in[1] => Decoder7.IN0
scrolled_note_seg3_in[1] => Decoder9.IN1
scrolled_note_seg3_in[2] => Decoder8.IN0
scrolled_note_seg3_in[2] => Decoder9.IN0
scrolled_note_seg4_in[0] => Decoder10.IN1
scrolled_note_seg4_in[0] => Decoder11.IN1
scrolled_note_seg4_in[0] => Decoder12.IN2
scrolled_note_seg4_in[1] => Decoder10.IN0
scrolled_note_seg4_in[1] => Decoder12.IN1
scrolled_note_seg4_in[2] => Decoder11.IN0
scrolled_note_seg4_in[2] => Decoder12.IN0
scrolled_note_seg5_in[0] => Decoder13.IN1
scrolled_note_seg5_in[0] => Decoder14.IN1
scrolled_note_seg5_in[0] => Decoder15.IN2
scrolled_note_seg5_in[1] => Decoder13.IN0
scrolled_note_seg5_in[1] => Decoder15.IN1
scrolled_note_seg5_in[2] => Decoder14.IN0
scrolled_note_seg5_in[2] => Decoder15.IN0
scrolled_note_seg6_in[0] => Decoder16.IN1
scrolled_note_seg6_in[0] => Decoder17.IN1
scrolled_note_seg6_in[0] => Decoder18.IN2
scrolled_note_seg6_in[1] => Decoder16.IN0
scrolled_note_seg6_in[1] => Decoder18.IN1
scrolled_note_seg6_in[2] => Decoder17.IN0
scrolled_note_seg6_in[2] => Decoder18.IN0
octave_up_active => always2.IN0
octave_up_active => always2.IN0
octave_down_active => always2.IN1
octave_down_active => always2.IN1
seg_a <= seg_a~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_b <= seg_b~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_c <= seg_c~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_d <= seg_d~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_e <= seg_e~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_f <= seg_f~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_g <= seg_g~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_dp <= <GND>
digit_selects[0] <= digit_selects[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[1] <= digit_selects[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[2] <= digit_selects[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[3] <= digit_selects[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[4] <= digit_selects[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[5] <= digit_selects[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[6] <= digit_selects[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit_selects[7] <= digit_selects[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


